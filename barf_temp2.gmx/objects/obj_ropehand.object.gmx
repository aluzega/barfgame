<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hand</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// define properties

x = obj_body.x+45;

spd = 500;
next_seg = self;
//offset = distance_to_object(obj_ropeshoulder) div 10;
offset = 3;

last_seg = next_seg;
next_seg = instance_create(x, y, obj_ropeelbow);
physics_joint_distance_create(last_seg, next_seg, last_seg.x, last_seg.y, next_seg.x, next_seg.y, false);
next_seg.parent = last_seg;

count = 0;
do
    {
    count += 1;
    last_seg = next_seg;
    next_seg = instance_create(x, y + offset*count, obj_ropeelbow);
    physics_joint_distance_create(last_seg, next_seg, last_seg.x, last_seg.y, next_seg.x, next_seg.y, false);
    next_seg.parent = last_seg;
    }
until(obj_body.y - next_seg.y &lt;= offset);

physics_joint_distance_create(next_seg, obj_body, next_seg.x, next_seg.y, obj_body.x+45, obj_body.y, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// move

up = keyboard_check_direct(vk_up);
down = keyboard_check_direct(vk_down);
left = keyboard_check_direct(vk_left);
right = keyboard_check_direct(vk_right);

dir_x = 0;
dir_y = 0;

if up
    {
    dir_y -= spd;
    }
if down
    {
    dir_y += spd;
    }
if left
    {
    dir_x -= spd;
    }
if right
    {
    dir_x += spd;
    }
          
//physics_apply_force(x,y,dir_x,dir_y);
phy_linear_velocity_x = dir_x;
phy_linear_velocity_y = dir_y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>3</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,24</point>
    <point>0,24</point>
  </PhysicsShapePoints>
</object>
